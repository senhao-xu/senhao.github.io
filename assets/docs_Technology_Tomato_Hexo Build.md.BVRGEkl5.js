import{_ as s,c as e,a2 as i,o as t}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"Hexo Build","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Technology/Tomato/Hexo Build.md","filePath":"docs/Technology/Tomato/Hexo Build.md","lastUpdated":1722519091000}'),h={name:"docs/Technology/Tomato/Hexo Build.md"};function l(o,a,n,d,p,r){return t(),e("div",null,a[0]||(a[0]=[i(`<h1 id="hexo-build" tabindex="-1">Hexo Build <a class="header-anchor" href="#hexo-build" aria-label="Permalink to &quot;Hexo Build&quot;">​</a></h1><h2 id="hexo搭建教程" tabindex="-1">hexo搭建教程 <a class="header-anchor" href="#hexo搭建教程" aria-label="Permalink to &quot;hexo搭建教程&quot;">​</a></h2><p>基于Windows系统进行搭建</p><h3 id="前置条件" tabindex="-1">前置条件 <a class="header-anchor" href="#前置条件" aria-label="Permalink to &quot;前置条件&quot;">​</a></h3><ol><li>nodejs</li><li>git</li></ol><h3 id="安装hexo" tabindex="-1">安装hexo <a class="header-anchor" href="#安装hexo" aria-label="Permalink to &quot;安装hexo&quot;">​</a></h3><p>我们采用<code>Hexo</code>来创建我们的博客网站，<code>Hexo</code> 是一个基于<code>NodeJS</code>的静态博客网站生成器，使用<code>Hexo</code>不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。点击进入 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noreferrer">官网</a>。</p><h4 id="安装hexo-1" tabindex="-1">安装hexo <a class="header-anchor" href="#安装hexo-1" aria-label="Permalink to &quot;安装hexo&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hexo-cli</span></span></code></pre></div><h4 id="查看版本" tabindex="-1">查看版本 <a class="header-anchor" href="#查看版本" aria-label="Permalink to &quot;查看版本&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><h4 id="创建一个hexo" tabindex="-1">创建一个hexo <a class="header-anchor" href="#创建一个hexo" aria-label="Permalink to &quot;创建一个hexo&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> blog</span></span></code></pre></div><h5 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h4 id="本地启动" tabindex="-1">本地启动 <a class="header-anchor" href="#本地启动" aria-label="Permalink to &quot;本地启动&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#生成静态文件 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#进行预览</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span></span></code></pre></div><p>此时汝的一个简单的hexo-blog就搭建完成啦!</p><h3 id="更换主题" tabindex="-1">更换主题 <a class="header-anchor" href="#更换主题" aria-label="Permalink to &quot;更换主题&quot;">​</a></h3><p><code>Hexo</code> 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点 <a href="https://hexo.io/themes/" target="_blank" rel="noreferrer">这里</a> 查看。这里介绍两个主题的使用方法，<code>Next</code> 和 <code>Fluid</code>，个人比较喜欢<code>Fluid</code>。</p><h4 id="下载fluid主题" tabindex="-1">下载Fluid主题 <a class="header-anchor" href="#下载fluid主题" aria-label="Permalink to &quot;下载Fluid主题&quot;">​</a></h4><p><a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noreferrer">这里</a>是官方地址,该REAEMD.md中有较为详细的教程，这里不再重复.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/fluid-dev/hexo-theme-fluid.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./themes</span></span></code></pre></div><h4 id="创建一个post" tabindex="-1">创建一个post <a class="header-anchor" href="#创建一个post" aria-label="Permalink to &quot;创建一个post&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [post]</span></span></code></pre></div><p>此时在blog/source/_posts/，会出现创建的post。</p><h3 id="发布" tabindex="-1">发布 <a class="header-anchor" href="#发布" aria-label="Permalink to &quot;发布&quot;">​</a></h3><h4 id="私人服务器" tabindex="-1">私人服务器 <a class="header-anchor" href="#私人服务器" aria-label="Permalink to &quot;私人服务器&quot;">​</a></h4><p>1、打包汝的blog</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span></span></code></pre></div><p>将<code>public</code> 目录下的文件复制到 <code>Linux</code> 服务器，使用nginx进行代理即可。</p><h3 id="使用时出现的问题" tabindex="-1">使用时出现的问题 <a class="header-anchor" href="#使用时出现的问题" aria-label="Permalink to &quot;使用时出现的问题&quot;">​</a></h3><h4 id="主页摘要" tabindex="-1">主页摘要 <a class="header-anchor" href="#主页摘要" aria-label="Permalink to &quot;主页摘要&quot;">​</a></h4><p>编写完成文章后，主页预览发现摘要显示部分内容。解决方案有两种：</p><ol><li>使用<code>&lt;!--more--&gt;</code>进行截断</li><li>添加<code>description</code>信息</li></ol><h4 id="标签和分类" tabindex="-1">标签和分类 <a class="header-anchor" href="#标签和分类" aria-label="Permalink to &quot;标签和分类&quot;">​</a></h4><h5 id="创建一个标签模块" tabindex="-1">创建一个标签模块 <a class="header-anchor" href="#创建一个标签模块" aria-label="Permalink to &quot;创建一个标签模块&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> page</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tags</span></span></code></pre></div><p>此时你的<code>source</code>文件夹下有了<code>categories\\index.md</code>，打开<code>index.md</code>文件将 title 设置为<code>title: 分类</code>。文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中。</p><h5 id="创建一个分类模块" tabindex="-1">创建一个分类模块 <a class="header-anchor" href="#创建一个分类模块" aria-label="Permalink to &quot;创建一个分类模块&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hexo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> page</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> categories</span></span></code></pre></div><p>此时你的<code>source</code>文件夹下有了<code>tags\\index.md</code>，打开<code>index.md</code>文件将 title 设置为<code>title: 标签</code> 。文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中 。</p>`,42)]))}const g=s(h,[["render",l]]);export{k as __pageData,g as default};
