import{_ as s,c as i,a2 as t,o as e}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"JVM","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Technology/Tomato/JVM.md","filePath":"docs/Technology/Tomato/JVM.md","lastUpdated":1722519091000}'),h={name:"docs/Technology/Tomato/JVM.md"};function l(n,a,p,o,c,d){return e(),i("div",null,a[0]||(a[0]=[t('<h1 id="jvm" tabindex="-1">JVM <a class="header-anchor" href="#jvm" aria-label="Permalink to &quot;JVM&quot;">​</a></h1><h2 id="jvm-1" tabindex="-1">JVM <a class="header-anchor" href="#jvm-1" aria-label="Permalink to &quot;JVM&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/312276166" target="_blank" rel="noreferrer">助你了解jvm命令，查找JVM堆栈信息，分析性能问题 - 知乎 (zhihu.com)</a></p><h3 id="打印栈信息" tabindex="-1">打印栈信息 <a class="header-anchor" href="#打印栈信息" aria-label="Permalink to &quot;打印栈信息&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [pid]</span></span></code></pre></div><h3 id="打印堆信息" tabindex="-1">打印堆信息 <a class="header-anchor" href="#打印堆信息" aria-label="Permalink to &quot;打印堆信息&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -heap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [pid]</span></span></code></pre></div><h3 id="查看虚拟机状态" tabindex="-1">查看虚拟机状态 <a class="header-anchor" href="#查看虚拟机状态" aria-label="Permalink to &quot;查看虚拟机状态&quot;">​</a></h3><p>2秒打印一次，打印10次</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -gcutil</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span></code></pre></div><p>参数： option： -class 查看类装载的信息 -gc 查看java堆的状况 -gccapacity 查看堆中各个区域的最小容量和最大容量 -gcutil 查看堆中各个区域已使用空间占其总空间的百分比 -gccause 与-gcutil相同，另外还输出了：导致上一次GC的原因和当前GC的原因 -gcnew 查看堆中新生代的状况 -gcnewcapacity 查看堆中新生代的最小容量和最大容量 -gcold 查看堆中老年代的状况 -gcoldcapacity 查看堆中老年代的最小容量和最大容量 -gcpermcapacity 查看堆中永久代的最小容量和最大容量 -gcmetacapacity 查看元数据空间的当前大小、最大容量和最小容量(jdk1.8)</p><p>interval：表示查询的间隔时间，单位：毫秒 count： 表示查询的次数，如果interval和count都省略，则默认为只查询一次。</p>',12)]))}const g=s(h,[["render",l]]);export{k as __pageData,g as default};
