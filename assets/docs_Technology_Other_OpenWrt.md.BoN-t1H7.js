import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.DPuwY6B9.js";const g=JSON.parse('{"title":"OpenWrt","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Technology/Other/OpenWrt.md","filePath":"docs/Technology/Other/OpenWrt.md","lastUpdated":1722519091000}'),l={name:"docs/Technology/Other/OpenWrt.md"};function t(p,s,e,k,F,d){return h(),a("div",null,s[0]||(s[0]=[n(`<h1 id="openwrt" tabindex="-1">OpenWrt <a class="header-anchor" href="#openwrt" aria-label="Permalink to &quot;OpenWrt&quot;">​</a></h1><h1 id="openwrt-build" tabindex="-1">OpenWrt-Build <a class="header-anchor" href="#openwrt-build" aria-label="Permalink to &quot;OpenWrt-Build&quot;">​</a></h1><h2 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h2><h3 id="要求" tabindex="-1">要求 <a class="header-anchor" href="#要求" aria-label="Permalink to &quot;要求&quot;">​</a></h3><ol><li>基于Ubuntu LTS</li><li>不使用root进行编译</li><li>硬盘80G</li><li>cpu核数越多编译越快</li><li>全程需科学网络</li><li>默认登陆IP 192.168.1.1 密码 password</li></ol><h3 id="编译-1" tabindex="-1">编译 <a class="header-anchor" href="#编译-1" aria-label="Permalink to &quot;编译&quot;">​</a></h3><ol><li><p>安装编译依赖</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新本地软件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full-upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> antlr3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asciidoc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> automake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autopoint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> binutils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bison</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bzip2 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ccache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cpio</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device-tree-compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fastjar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gawk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gettext</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-multilib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g++-multilib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gperf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> haveged</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help2man</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> intltool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libc6-dev-i386</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libelf-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libfuse-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libglib2.0-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgmp3-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">libltdl-dev </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">libmpc-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libmpfr-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libncurses5-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libncursesw5-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libpython3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libreadline-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">libssl-dev </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">libtool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lrzsz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkisofs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> msmtp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja-build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p7zip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p7zip-full</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkgconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python2.7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python3-pyelftools </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">python3-setuptools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qemu-utils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsync</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scons</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> squashfs-tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subversion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> texinfo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uglifyjs </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">upx-ucl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmlto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zlib1g-dev</span></span></code></pre></div></li><li><p>下载源代码，更新 feeds 并选择配置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载源码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/coolsnowwolf/lede</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入lede</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lede</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加自定义软件源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feeds.conf.default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">src-git kenzo https://github.com/kenzok8/openwrt-packages</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">src-git small https://github.com/kenzok8/small</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新 feeds 并选择配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/feeds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/feeds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div></li><li><p>定制配置（根据需求指定）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更换默认IP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/192.168.1.1/10.0.0.2/g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package/base-files/files/bin/config_generate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 交换 LAN/WAN 口 (一般用于R2S)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s,&quot;eth1&quot; &quot;eth0&quot;,&quot;eth0&quot; &quot;eth1&quot;,g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target/linux/rockchip/armv8/base-files/etc/board.d/02_network</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;s,&#39;eth1&#39; &#39;eth0&#39;,&#39;eth0&#39; &#39;eth1&#39;,g&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target/linux/rockchip/armv8/base-files/etc/board.d/02_network</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#取消登录密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.//g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package/lean/default-settings/files/zzz-default-settings</span></span></code></pre></div></li><li><p>插件选择</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进行插件选择 (可使用config下文件)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> menuconfig</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载编译所需软件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> download</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> V=s</span></span></code></pre></div></li><li><p>编译 （二选一）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单线程编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> V=s</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 多线程编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j$(($(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">) + 1))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> V=s</span></span></code></pre></div></li></ol><p>编译完成后固件地址相对路径：<code>/bin/targets/</code>​</p><h3 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h3><p>安装完成后显示CPUMark分数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/etc/coremark.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/bench.log</span></span></code></pre></div><p>编译指定版本内核 修改<code>vim target/linux/x86/Makefile</code>​</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#将KERNEL_PATCHVER修改为5.15</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KERNEL_PATCHVER:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=6.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KERNEL_TESTING_PATCHVER:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=5.15</span></span></code></pre></div><h3 id="二次编译" tabindex="-1">二次编译 <a class="header-anchor" href="#二次编译" aria-label="Permalink to &quot;二次编译&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./tmp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .config</span></span></code></pre></div><h3 id="其他编译参考" tabindex="-1">其他编译参考 <a class="header-anchor" href="#其他编译参考" aria-label="Permalink to &quot;其他编译参考&quot;">​</a></h3><p><a href="https://blog.nannan.cool/archives/121/" target="_blank" rel="noreferrer">编译属于自己的Openwrt固件 - NanNan&#39;s Blog</a></p><p><a href="https://lhy.life/20200531-openwrt+openclash/" target="_blank" rel="noreferrer">编译带 OpenClash 的 OpenWrt 固件 | 心底的河流</a></p><p><a href="https://jmdonj.com/%E7%BC%96%E8%AF%91openwrt.html" target="_blank" rel="noreferrer">编译 openwrt（lean 源码） 教程 - 欧尼酱的小屋</a> : 配置较全</p><p>‍</p>`,20)]))}const o=i(l,[["render",t]]);export{g as __pageData,o as default};
